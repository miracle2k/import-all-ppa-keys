#!/bin/bash
# Script for importing PPA OpenPGP keys 
# for all entries in your sources.list File
# Version 0.3.3
#
# This script is licensed under the MIT License
# see http://www.opensource.org/licenses/mit-license.php

# You'll need curl (http://curl.haxx.se/) to run
# this script, if it's not installed, the script will
# do it for you

# Configuration

# Path to your standard sources.list file
sourcesList='/etc/apt/sources.list'

# Editing beyond this line on your own risk ;-)
###############################################

# HELP
if [ "$1" == "--help" ]; then
    echo "This script needs to be run with root permissions"
    echo ""
    echo "You can use your own sources.list as parameter:"
    echo "sudo import-all-ppa-keys /path/to/sources.list"
    echo ""
    echo "If no parameter is given, standard /etc/apt/sources.list will be used"
    exit 0
fi    

# Check for superuser priviliges
if [ "$USER" != 'root' ]; then
    echo "Error: Your calling this script without root-permissions." >&2
    echo "Please start this with sudo in front" >&2
    exit 1
fi

# Check if curl is installed
if [ ! -f /usr/bin/curl ]; then
    echo "Need curl."
    echo "To install it please use"
    echo "sudo apt-get install curl"
fi

# Check if package ca-certificates is installed
cacheck=`aptitude search ca-certificates | grep "i   "`
if [ "$cacheck" == "" ]; then
    echo "Need package ca-certificates"
    echo "To install it please use"
    echo "sudo apt-get install ca-certificates"
fi

# Checking if custom .list file parameter was given
if [ "$1" != "" ]; then
    sourcesList=$1
    echo "Using custom source-file: $sourcesList"
    echo "--------------------------------------"
else
    echo "Using standard sources.list: $sourcesList"
    echo "-------------------------------------------------"
fi

# Check if file exists
if [ ! -f "$sourcesList" ]; then
    echo "Error: $sourcesList is not a file">&2
    exit 1
fi

# extract launchpad project names
slist=(` grep launchpad $sourcesList | sed -e 's/.*net\/\(.*\)\/.*/\1/' -e 's/\/.*$//' `)
num=${#slist}
if [ "$slist" != "" ]; then
    for ((i=0;i<$num;i++)); do
        if [ "${slist[${i}]}" != "" ]; then

            url=https://launchpad.net/~${slist[${i}]}/+archive/ppa
            echo "PPA URL: $url"
            # extract key ID from launchpad website
            keyid=`curl -s $url | grep '1024R/' | sed -e 's/.*\/\(.*\)<\/code.*/\1/'` 
            echo "key ID: $keyid"
            # get keys from keyserver
            sudo apt-key adv --recv-keys --keyserver keyserver.ubuntu.com $keyid

            if [ $? = 0 ]; then
                echo ""
                echo "Key successfully imported"
                echo ""
            elif [ $? = 1 ]; then
                echo ""
                echo "An error occured, please check the sources entries"
                echo ""
                exit 1
            fi 
        fi
    done
    echo "All keys imported successfully"
    exit 0
else
    echo "No PPAs found in sources file. Exiting"
    exit 1
fi
